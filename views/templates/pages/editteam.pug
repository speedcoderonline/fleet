extends ../index
block mainContent

	.action-button-wrapper
		.action-button.delete-button#delete-button(onclick = 'abandonTeam()') Abandon Team
		.action-button.save-button#save-button(onclick = 'saveEdits()') Confirm
		
	#participant-picker.display-none
		.close(onclick="_('participant-picker').classList.add('display-none');while (_('participant-picker').querySelector('.wrapper').firstChild) {_('participant-picker').querySelector('.wrapper').removeChild(_('participant-picker').querySelector('.wrapper').firstChild);}") Close
		.wrapper

	.profile-wrapper

		.profile-info

			.non-autosave
				section.name
					h4.title Name
					input.text-input.name#name(placeholder='Team name' onkeydown='changesMade()')

			section.members#team-members
				h4.title Members
				.wrapper.small-items#membersWrapper
					.add(onclick = 'openParticipantPicker()') New Participant

			section.skills#profile-skills
				h4.title Competenses
				.my-wrapper
				.potential-wrapper
					header(onclick='_("profile-skills").querySelector(".potential-wrapper").classList.toggle("expanded")')
						.title Add competens
						.expand
					.content

			section.projects#team-projects
				h4.title Work
				.edit-wrapper
					.image-picker
					.wrapper
						input.text-input.info.title#project-title(placeholder='Title')
						input.text-input.info.link#project-link(placeholder='Link (optional)')
					.long-input#project-description(contenteditable='true' placeholder='Description')

					.save.action-btn#project-save(onclick='saveProject()') Add
					.delete.action-btn.display-none#project-delete(onclick='deleteProject()') Delete
				.content-wrapper
			//	.add-new(onclick='newProject()') Add

	
	script(src='/javascript/renderskills.js')
	script.
		//AIzaSyB9uz6sZTjEZOIE6Z_GWoXNyxNpsT33v70
		var teamId = subpage
		
		var startCountry
		var startCity
		var profileSkills
		var saveLocation
		var renderAllProjects
		var currentProjectId = (new Date).getTime()
		var userId
		var newTeam = getCookie('newTeam')
		var noNameSaved = getCookie('newTeam')
		var membersArray = []
		var membersNames = {}
		var teamName = ''

		function changesMade(){
			_('save-button').classList.remove('display-none')
		}



		//action-button -> edit or add friend
		firebase.auth().onAuthStateChanged(function(user) {
			userId = user.uid
			firebase.database().ref('teams/' + teamId).once("value", function(snapshot){
				var teamData = snapshot.val() || {}
				profileSkills = teamData.skills || {}
				if(teamData.members){
					membersArray = Object.keys(teamData.members)

					Object.keys(teamData.members).forEach(function(memberId){
						firebase.database().ref('users/creators/' + memberId).once("value", function(snapshot){
							membersNames[memberId] = snapshot.val().firstname + ' ' + snapshot.val().lastname
							createCard(snapshot.val(), '#membersWrapper')
						})
					})
				}else{
					firebase.database().ref('users/creators/' + userId).once("value", function(snapshot){
						createCard(snapshot.val(), '#membersWrapper')
					})
				}
				

				//- startCountry = teamData.country || ''
				//- startCity = teamData.city || ''

				//- if(!teamData.city || !teamData.country){
				//- 	$.getJSON("http://api.ipstack.com/check?access_key=b35d030d40abec57146c3d0a8c458871", function (data) {
				//- 		var country = data.country_name
				//- 		var region = data.region_name

				//- 		document.getElementById('team-location').querySelector('.country').value = country
				//- 		document.getElementById('team-location').querySelector('.city').value = region

				//- 		saveLocation()
						
				//- 	});
				//- }

				//try{

				document.getElementById('name').value = teamData.name || 'New team'
				teamName = teamData.name || 'New team'
				//- document.getElementById('team-location').querySelector('.country').value = teamData.country
				//- document.getElementById('team-location').querySelector('.city').value = teamData.city

				//- saveLocation = function(){

				//- 	function capitalizeFirstLetter(string) {
				//- 		return string.charAt(0).toUpperCase() + string.slice(1);
				//- 	}
				//- 	var country = capitalizeFirstLetter(document.getElementById('team-location').querySelector('.country').value.toLowerCase())
				//- 	var city = capitalizeFirstLetter(document.getElementById('team-location').querySelector('.city').value.toLowerCase())

				//- 	firebase.database().ref('teams/creators/' + currentUser().uid).update({
				//- 		country: country,
				//- 		city: city,
				//- 	})

				//- 	firebase.database().ref('locations/' + startCountry + '/teams/' + currentUser().uid).remove()
				//- 	firebase.database().ref('locations/' + country + '/teams/' + currentUser().uid).set((new Date).getTime())

				//- 	firebase.database().ref('locations/' + startCountry + '/cities/' + startCity + '/' + currentUser().uid).remove()
				//- 	firebase.database().ref('locations/' + country + '/cities/' + city + '/' + currentUser().uid).set((new Date).getTime())

				//- 	startCountry = country
				//- 	startCity = city
				//- }

				renderAllSkills(teamData.skills, 'team', teamId)

				//render Projects

				renderAllProjects = function(teamProjects){
					Object.values(teamProjects).forEach(function(project, idx){
						renderProject(Object.keys(teamProjects)[idx], project.title, project.description, project.link)
					})
				}

				if(teamData.projects){
					renderAllProjects(teamData.projects)
				}

				//- }catch(e){

				//- }

			})
		})


		function renderProject(id, title, description, link){
			var wrapperDiv = document.createElement('div')
			wrapperDiv.classList.add('project')
			document.getElementById('team-projects').querySelector('.content-wrapper').appendChild(wrapperDiv)
			wrapperDiv.dataset.id = id

			var imageDiv = document.createElement('div')
			imageDiv.classList.add('image')
			//if(image){imageDiv.innerText = image}
			wrapperDiv.appendChild(imageDiv)

			var textWrapperDiv = document.createElement('div')
			textWrapperDiv.classList.add('text-wrapper')
			wrapperDiv.appendChild(textWrapperDiv)

			var titleDiv = document.createElement('p')
			titleDiv.classList.add('title')
			if(title){titleDiv.innerText = title}
			textWrapperDiv.appendChild(titleDiv)

			var descriptionDiv = document.createElement('p')
			descriptionDiv.classList.add('description')
			if(description){descriptionDiv.innerText = description}
			textWrapperDiv.appendChild(descriptionDiv)

			var linkEl = document.createElement('p')
			linkEl.classList.add('link')
			linkEl.classList.add('display-none')
			if(link){linkEl.innerText = link}
			wrapperDiv.appendChild(linkEl)

			wrapperDiv.onclick = function(event){
				currentProjectId = event.currentTarget.dataset.id
				_('project-title').scrollIntoView()
				_('project-title').value = event.currentTarget.querySelector('.text-wrapper').querySelector('.title').innerText
				_('project-description').innerText = event.currentTarget.querySelector('.text-wrapper').querySelector('.description').innerText
				_('project-link').value = event.currentTarget.querySelector('.link').innerText
				_('project-delete').classList.remove('display-none')
				event.currentTarget.classList.add('display-none')
				_('project-save').innerText = 'Save'
			}
		}

		//- function newProject(){
		//- 	var projectId = (new Date()).getTime()

		//- 	firebase.database().ref('teams/' + teamId + '/projects/' + projectId).set({
		//- 		title: "",
		//- 		description: "",
		//- 		link: ""
		//- 	}).then(function(){
		//- 		window.location = '/editproject/' + projectId
		//- 	})
		//- }

		function reRenderAllSkills(){
			
			firebase.database().ref('teams/' + teamId + '/skills').once("value", function(snapshot){

				profileSkills = snapshot.val()
				renderAllSkills(profileSkills, 'team', teamId)
			})
		}

		function saveEdits(){
			if(noNameSaved){newTeamSave()}
			noNameSaved = false
			if(!_('name').value){
				popUp("You have to input the Team's name")
				return
			}
			firebase.database().ref('teams/' + teamId).update({
				name: _('name').value,
			}).then(function(){
				firebase.database().ref('teams/' + teamId + '/skills').set(profileSkills).then(function(){
					deleteCookie('newTeam')
					window.location.replace('/team/' + teamId)
										
				})

			})

			//- if(startCity != _('team-location').querySelector('.city').value || startCountry !== _('team-location').querySelector('.country').value){
			//- 	saveLocation()
			//- }
		}

		function deleteProject(){
			firebase.database().ref('teams/' + teamId + '/projects/' + currentProjectId).remove().then(function(){
				_('project-title').value = ''
				_('project-description').innerText = ''
				_('project-link').value = ''
				currentProjectId = (new Date).getTime()

				var content = document.getElementById('team-projects').querySelector('.content-wrapper')
				while (content.firstChild) {
					content.removeChild(content.firstChild);
				}

				firebase.database().ref('teams/' + teamId + '/projects').once("value", function(snapshot){
					teamProjects = snapshot.val()
					renderAllProjects(teamProjects)
					popUp('removed.')
					_('project-delete').classList.add('display-none')
					_('project-save').innerText = 'Add'
				})
			})
		}

		function saveProject(){
			if(noNameSaved){newTeamSave()}
			if(_('project-link').value){
				if(_('project-link').value.includes('//')){
					var projectLink = _('project-link').value
				}else{
					var projectLink = '//' + _('project-link').value
				}
				
			}
			
			firebase.database().ref('teams/' + teamId + '/projects/' + currentProjectId).set({
				title: _('project-title').value,
				description: _('project-description').innerText,
				link: projectLink
			}).then(function(){
				_('project-title').value = ''
				_('project-description').innerText = ''
				_('project-link').value = ''
				currentProjectId = (new Date).getTime()

				var content = document.getElementById('team-projects').querySelector('.content-wrapper')
				while (content.firstChild) {
					content.removeChild(content.firstChild);
				}

				firebase.database().ref('teams/' + teamId + '/projects').once("value", function(snapshot){
					teamProjects = snapshot.val()
					renderAllProjects(teamProjects)
					popUp('Saved.')
					_('project-delete').classList.add('display-none')
					_('project-save').innerText = 'Add'
				})
			})
			
		}

		function openParticipantPicker(){
			_('participant-picker').classList.remove('display-none')

			firebase.database().ref('users/creators/' + userId + '/friends').once("value", function(snapshot){
				console.log(snapshot.val())
				snapshot.forEach(function(friendId){
					if(membersArray.indexOf(friendId.key) > -1){return}
					firebase.database().ref('users/creators/' + friendId.key + '/firstname').once("value", function(snapshot){
						var friendDiv = document.createElement('div')
						friendDiv.classList.add('friend')
						_('participant-picker').querySelector('.wrapper').appendChild(friendDiv)
						friendDiv.id = 'add-' + friendId.key
						friendDiv.innerText = snapshot.val()

						friendDiv.onclick = function(event){
							if(noNameSaved){newTeamSave()}

							firebase.database().ref('users/creators/' + friendId.key + '/requests/' + teamId).set({
								type: 'team',
								uid: teamId,
								date: (new Date()).getTime()
							}).then(function(){
								popUp('Request sent')
							})

							_('participant-picker').classList.add('display-none')
							while (_('participant-picker').querySelector('.wrapper').firstChild) {
								_('participant-picker').querySelector('.wrapper').removeChild(_('participant-picker').querySelector('.wrapper').firstChild);
							}
							
							
							//_('team-members').querySelector('.wrapper')
							//add friend to team and editpage, then close popup
						}
					}).then(firebase.database().ref('users/creators/' + friendId.key + '/lastname').once("value", function(snapshot){
						_('add-' + friendId.key).innerText += (' ' + snapshot.val())
						
					}))
				})
			})
		}

		function newTeamSave(){
			firebase.database().ref('teams/' + teamId).update({name: _('name').value,})
			firebase.database().ref('teams/' + teamId + '/members/' + userId).set((new Date()).getTime())
			firebase.database().ref('users/creators/' + userId + '/teams/' + teamId).set((new Date()).getTime())
			firebase.database().ref('users/creators/' + userId + '/chats/' + teamId).set((new Date()).getTime())
			deleteCookie("newTeam")
			firebase.database().ref('teams/' + teamId + '/members/' + userId).set((new Date()).getTime())
			firebase.database().ref('chats/' + teamId).set({
				latestAction:(new Date()).getTime(),
				type:'team',
				members:{
					[userId]:(new Date()).getTime()
				}
			})
			noNameSaved = false
		}

		function abandonTeam(){
			firebase.database().ref('users/creators/' + userId + '/chats/' + teamId).remove()
			firebase.database().ref('users/creators/' + userId + '/teams/' + teamId).remove()
			firebase.database().ref('teams/' + teamId + '/members').once("value", function(snapshot){
				if(snapshot.numChildren()<=1 && snapshot.val()[userId]){
					firebase.database().ref('teams/' + teamId).remove()
					firebase.database().ref('chats/' + teamId).remove()
				}else{
					firebase.database().ref('teams/' + teamId + '/members/' + userId).remove()
					firebase.database().ref('chats/' + teamId + '/members/' + userId).remove()
					Object.keys(snapshot.val()).forEach(function(memberId){
						if(memberId != userId){
							firebase.database().ref('users/creators/' + memberId + '/email').once("value", function(emailSnapshot){
								sendEmail(emailSnapshot.val(), membersNames[userId] + ' has left ' + teamName, 'Hi ' + membersNames[memberId] + '!<br><br>' + membersNames[userId] + ' has left the team ' + teamName + '. If ' + membersNames[userId] + ' wants to join the team again, you can invite him in the team settings.')
							})

						}

					})
				}

				window.location = '/friends'
				
			})
			
		}

		function addAllSkills(){
			firebase.database().ref('skills/').set({
				film:{
					name: 'Film',
					subSkills:{
						director:{
							name: 'Director'
						},	 
						producer:{
							name: 'Producer'
						},	
						filmmaker:{
							name: 'Filmmaker'
						},	
						videoEditor:{
							name: 'Video Editor'
						},	
						sound:{
							name: 'Sound'
						},	
						specialEffects:{
							name: 'Special Effects'
						},	
						scriptwriter:{
							name: 'Scriptwriter'
						},	
						light:{
							name: 'Light'
						},	
						actor:{
							name: 'Actor'
						},	
						voiceActor:{
							name: 'Voice Actor'
						},	
						['2DAnimation']:{
							name: '2D Animation'
						},	
						['3DAnimation']:{
							name: '3D Animation'
						},	
					},
				},
					

				photo:{
					name: 'Photo',
					subSkills:{
						photographer:{
							name: 'Photographer'
						},	
						photoEditing:{
							name: 'Photo Editing'
						},	
						model:{
							name: 'Model'
						},	
					},
				},
					

				design:{
					name: 'Design',
					subSkills:{
						['2DIllustration']:{
							name: '2D Illustration'
						},	
						['3DIllustration']:{
							name: '3D Illustration'
						},	
						graphicDesign:{
							name: 'Graphic Design'
						},
						productDesigner:{
							name: 'Product Designer'
						},	
						advertising:{
							name: 'Advertising'
						},	
						socialMedia:{
							name: 'Social Media'
						},	
						logo:{
							name: 'Logo'
						},	
						photoshop:{
							name: 'Photoshop'
						},	
					},
				},
					


				programming:{
					name: 'Programming',
					subSkills:{
						frontend:{
							name: 'Frontend'
						},	
						backend:{
							name: 'Backend'
						},	
						design:{
							name: 'Design'
						},	
						web:{
							name: 'Web'
						},	
						ios:{
							name: 'iOS'
						},	
						android:{
							name: 'Android'
						},	
						hardware:{
							name: 'Hardware'
						},	
					},
				},
					

				music:{
					name: 'Music',
					subSkills:{
						producer:{
							name: 'Producer'
						},	
						dj:{
							name: 'DJ'
						},	
						singing:{
							name: 'Singing'
						},	
						guitar:{
							name: 'Guitar'
						},	
						bass:{
							name: 'Bass'
						},	
						drums:{
							name: 'Drums'
						},	
						piano:{
							name: 'Piano'
						},	
						trumpet:{
							name: 'Trumpet'
						},	
						saxophone:{
							name: 'Saxophone'
						},	
						clarinet:{
							name: 'Clarinet'
						},	 
						violin:{
							name: 'Violin'
						},	
						cello:{
							name: 'Cello'
						},	
					},
				},
					

				//- entrepreneur:{
				//- 	name: 'Entrepreneur',
				//- 	subSkills:{
				//- 		economy:{
				//- 			name: 'Economy'
				//- 		},	
				//- 		marketing:{
				//- 			name: 'Marketing'
				//- 		},	
				//- 		administration:{
				//- 			name: 'Administration'
				//- 		},	
				//- 		projectManager:{
				//- 			name: 'Project Manager'
				//- 		},	
				//- 		tech:{
				//- 			name: 'Tech'
				//- 		},	
				//- 	},
				//- }
					
			})
		}


	//- script.
	//- 	function activatePlaceSearch(){
	//- 		var input = _("location-search")
	//- 		 var options = {
	//- 			types: ['(cities)'],
	//- 		 };
	//- 		var autocomplete = new google.maps.places.Autocomplete(input)

	//- 		google.maps.event.addListener(autocomplete, 'place_changed', function() {
	//- 			var place = autocomplete.getPlace();
	//- 			for (var i = 0; i < place.address_components.length; i++) {
	//- 				for (var j = 0; j < place.address_components[i].types.length; j++) {
	//- 					if (place.address_components[i].types[j] == "postal_code") {
	//- 					document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;

	//- 					}
	//- 				}
	//- 			}
	//- 		})
	//- 	}

	//- script(type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB9uz6sZTjEZOIE6Z_GWoXNyxNpsT33v70&libraries=places&callback=activatePlaceSearch")


		



		