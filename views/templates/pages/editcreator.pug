extends ../index
block mainContent

	.save-button.display-none#save-button(onclick = 'saveEdits()') Save

	.profile-wrapper

		.profile-info

			.non-autosave
				.image
				section.name
					h4.title Name
					input.text-input.first-name#first-name(placeholder='First name' onkeydown='changesMade()')
					input.text-input.last-name#last-name(placeholder='Last name' onkeydown='changesMade()')
				section.description
					h4.title Description
					.long-input#user-description(contenteditable='true' placeholder='User description' onkeydown='changesMade()')

				section.location#user-location
					h4.title Location
					input.text-input.country(placeholder='Country' onkeydown='changesMade()')
					input.text-input.city(placeholder='City' onkeydown='changesMade()')
				//input#location-search(placeholder = 'Your city')
				
			section.skills#user-skills
				h4.title Competenses
				.my-wrapper
				.potential-wrapper
					header(onclick='_("user-skills").querySelector(".potential-wrapper").classList.toggle("expanded")')
						.title Add competens
						.expand
					.content
			section.projects#user-projects
				h4.title Experiences
				.edit-wrapper
					.image-picker
					.wrapper
						input.text-input.info.title#project-title(placeholder='Title')
						input.text-input.info.link#project-link(placeholder='Link (optional)')
					.long-input#project-description(contenteditable='true' placeholder='Description')

					.save.action-btn#project-save(onclick='saveProject()') Add
					.delete.action-btn.display-none#project-delete(onclick='deleteProject()') Delete
				.content-wrapper
			//	.add-new(onclick='newProject()') Add

	

	script.
		//AIzaSyB9uz6sZTjEZOIE6Z_GWoXNyxNpsT33v70

		
		var startCountry
		var startCity
		var userSkills
		var saveLocation
		var renderAllSkills
		var renderAllProjects
		var currentProjectId = (new Date).getTime()

		function changesMade(){
			_('save-button').classList.remove('display-none')
		}

		//action-button -> edit or add friend
		firebase.auth().onAuthStateChanged(function(user) {
			firebase.database().ref('users/creators/' + currentUser().uid).once("value", function(snapshot){
				var userData = snapshot.val()
				userSkills = userData.skills || {}

				startCountry = userData.country
				startCity = userData.city

				if(!userData.city || !userData.country){
					$.getJSON("http://freegeoip.net/json/", function (data) {
						var country = data.country_name
						var region = data.region_name

						document.getElementById('user-location').querySelector('.country').value = country
						document.getElementById('user-location').querySelector('.city').value = region

						saveLocation()
						
					});
				}

				//try{

				document.getElementById('first-name').value = userData.firstname
				document.getElementById('last-name').value = userData.lastname
				document.getElementById('user-description').value = userData.description || ''
				document.getElementById('user-location').querySelector('.country').value = userData.country
				document.getElementById('user-location').querySelector('.city').value = userData.city

				saveLocation = function(){

					function capitalizeFirstLetter(string) {
						return string.charAt(0).toUpperCase() + string.slice(1);
					}
					var country = capitalizeFirstLetter(document.getElementById('user-location').querySelector('.country').value.toLowerCase())
					var city = capitalizeFirstLetter(document.getElementById('user-location').querySelector('.city').value.toLowerCase())

					firebase.database().ref('users/creators/' + currentUser().uid).update({
						country: country,
						city: city,
					})

					firebase.database().ref('locations/' + startCountry + '/users/' + currentUser().uid).remove()
					firebase.database().ref('locations/' + country + '/users/' + currentUser().uid).set((new Date).getTime())

					firebase.database().ref('locations/' + startCountry + '/cities/' + startCity + '/' + currentUser().uid).remove()
					firebase.database().ref('locations/' + country + '/cities/' + city + '/' + currentUser().uid).set((new Date).getTime())

					startCountry = country
					startCity = city
				}

				renderAllSkills =  function(userSkills){
					firebase.database().ref('skills').once("value", function(snapshot){

						[document.getElementById('user-skills').querySelector('.my-wrapper'), document.getElementById('user-skills').querySelector('.potential-wrapper').querySelector('.content')].forEach(function(el){
							while (el.firstChild) {
								el.removeChild(el.firstChild);
							}
						})

						var allSkills = snapshot.val()

						Object.values(allSkills).forEach(function(mainSkill, idx){
							var mainSkillId = Object.keys(allSkills)[idx]
							if(userSkills){
								var userMainSkill = userSkills[mainSkillId]
							}else{
								var userMainSkill = false
							}
							renderSkill(Object.values(allSkills)[idx].name, mainSkillId, userMainSkill, true)

							if(userMainSkill){
								Object.values(mainSkill.subSkills).forEach(function(subSkill, idx2){
									var subSkillId = Object.keys(mainSkill.subSkills)[idx2]
									if(userMainSkill){
										var userSubSkill = userSkills[mainSkillId][subSkillId]
									}else{
										var userSubSkill = false
									}
									
									renderSkill(subSkill.name, subSkillId, userSubSkill, false, mainSkillId)
								})
							}
							
						})
					})
					//render skills

					function renderSkill(title, id, checked, isMainSkill, mainSkillId){
						var skillDiv = document.createElement('div')
						skillDiv.classList.add('skill')
						document.getElementById('user-skills').querySelector('.potential-wrapper').querySelector('.content').appendChild(skillDiv)

						var checkmark = document.createElement('input')
						checkmark.type = 'checkbox'
						checkmark.dataset.skillId = id
						checkmark.id = id
						checkmark.dataset.isMainSkill = isMainSkill
						checkmark.dataset.mainSkillId = mainSkillId
						checkmark.classList.add('checkmark')
						checkmark.checked = checked
						if(!isMainSkill){checkmark.classList.add('main-' + mainSkillId)}
						skillDiv.appendChild(checkmark)

						checkmark.onclick = function(el){

							//- if(el.target.dataset.isMainSkill == 'true'){
							//- 	if(!el.target.checked) document.querySelectorAll('.main-' + el.target.dataset.skillId).forEach(function(el2){
							//- 		el2.checked = false
							//- 	})
							//- 	userSkills[el.target.dataset.skillId] = el.target.checked || null
							//- }else{
							//- 	if(!_(el.target.dataset.mainSkillId).checked){
							//- 		el.target.checked = false
							//- 		return
							//- 	}

							//- 	if(typeof(userSkills[el.target.dataset.mainSkillId]) == "boolean"){
							//- 		userSkills[el.target.dataset.mainSkillId] = {}
							//- 	}
							//- 	userSkills[el.target.dataset.mainSkillId][el.target.dataset.skillId] = el.target.checked || null

							//- 	if(typeof(userSkills[el.target.dataset.mainSkillId]) !== "boolean"){

							//- 		var onlyNull = true

							//- 		Object.values(userSkills[el.target.dataset.mainSkillId]).forEach(function(val){
							//- 			if(val !== null){onlyNull = false}
							//- 		})

							//- 		if(onlyNull){
							//- 			userSkills[el.target.dataset.mainSkillId] = true
							//- 		}
							//- 	}
							//- }
							//- console.log(userSkills)

							if(el.target.dataset.isMainSkill == 'true'){
								var skillPath = el.target.dataset.skillId
							}else{
								var skillPath = el.target.dataset.mainSkillId + '/' + el.target.dataset.skillId
							}

							firebase.database().ref('users/creators/' + currentUser().uid + '/skills/' + skillPath).set(el.target.checked).then(function(){
								reRenderAllSkills()
							})
							
						}	

						var titleP = document.createElement('p')
						titleP.innerText = title
						titleP.classList.add('title')
						if(isMainSkill){titleP.style.fontWeight = "500"}
						skillDiv.appendChild(titleP)

						if(checked){
							var enabledSkillDiv = skillDiv.cloneNode(true)
							document.getElementById('user-skills').querySelector('.my-wrapper').appendChild(enabledSkillDiv)
							enabledSkillDiv.querySelector('.checkmark').onclick = checkmark.onclick
						}
					}
				}

				renderAllSkills(userData.skills)

				//render Projects

				renderAllProjects = function(userProjects){
					Object.values(userProjects).forEach(function(project, idx){
						renderProject(Object.keys(userProjects)[idx], project.title, project.description, project.link)
					})
				}

				if(userData.projects){
					renderAllProjects(userData.projects)
				}

				//- }catch(e){

				//- }

			})
		})


		function renderProject(id, title, description, link){
			var wrapperDiv = document.createElement('div')
			wrapperDiv.classList.add('project')
			document.getElementById('user-projects').querySelector('.content-wrapper').appendChild(wrapperDiv)
			wrapperDiv.dataset.id = id

			var imageDiv = document.createElement('div')
			imageDiv.classList.add('image')
			//if(image){imageDiv.innerText = image}
			wrapperDiv.appendChild(imageDiv)

			var textWrapperDiv = document.createElement('div')
			textWrapperDiv.classList.add('text-wrapper')
			wrapperDiv.appendChild(textWrapperDiv)

			var titleDiv = document.createElement('p')
			titleDiv.classList.add('title')
			if(title){titleDiv.innerText = title}
			textWrapperDiv.appendChild(titleDiv)

			var descriptionDiv = document.createElement('p')
			descriptionDiv.classList.add('description')
			if(description){descriptionDiv.innerText = description}
			textWrapperDiv.appendChild(descriptionDiv)

			var linkEl = document.createElement('p')
			linkEl.classList.add('link')
			linkEl.classList.add('display-none')
			if(link){linkEl.innerText = link}
			wrapperDiv.appendChild(linkEl)

			wrapperDiv.onclick = function(event){
				currentProjectId = event.currentTarget.dataset.id
				_('project-title').value = event.currentTarget.querySelector('.text-wrapper').querySelector('.title').innerText
				_('project-description').innerText = event.currentTarget.querySelector('.text-wrapper').querySelector('.description').innerText
				_('project-link').value = event.currentTarget.querySelector('.link').innerText
				_('project-delete').classList.remove('display-none')
				event.currentTarget.classList.add('display-none')
				_('project-save').innerText = 'Save'
			}
		}

		function newProject(){
			var projectId = (new Date()).getTime()

			firebase.database().ref('users/creators/' + currentUser().uid + '/projects/' + projectId).set({
				title: "",
				description: "",
				link: ""
			}).then(function(){
				window.location = '/editproject/' + projectId
			})
		}

		function reRenderAllSkills(){
			
			firebase.database().ref('users/creators/' + currentUser().uid + '/skills').once("value", function(snapshot){

				userSkills = snapshot.val()
				renderAllSkills(userSkills)
			})
		}

		function saveEdits(){
			firebase.database().ref('users/creators/' + currentUser().uid).update({
				firstname: _('first-name').value,
				lastname: _('last-name').value,
				description: _('user-description').value,
			}).then(function(){
				firebase.database().ref('users/creators/' + currentUser().uid + '/skills').set(userSkills).then(function(){
					popUp('Changes saved.')
				})

			})

			if(startCity != _('user-location').querySelector('.city').value || startCountry !== _('user-location').querySelector('.country').value){
				saveLocation()
			}
		}

		function deleteProject(){
			firebase.database().ref('users/creators/' + currentUser().uid + '/projects/' + currentProjectId).remove().then(function(){
				_('project-title').value = ''
				_('project-description').innerText = ''
				_('project-link').value = ''
				currentProjectId = (new Date).getTime()

				var content = document.getElementById('user-projects').querySelector('.content-wrapper')
				while (content.firstChild) {
					content.removeChild(content.firstChild);
				}

				firebase.database().ref('users/creators/' + currentUser().uid + '/projects').once("value", function(snapshot){
					userProjects = snapshot.val()
					renderAllProjects(userProjects)
					popUp('removed.')
					_('project-delete').classList.add('display-none')
					_('project-save').innerText = 'Add'
				})
			})
		}

		function saveProject(){
			firebase.database().ref('users/creators/' + currentUser().uid + '/projects/' + currentProjectId).set({
				title: _('project-title').value,
				description: _('project-description').innerText,
				link: _('project-link').value
			}).then(function(){
				_('project-title').value = ''
				_('project-description').innerText = ''
				_('project-link').value = ''
				currentProjectId = (new Date).getTime()

				var content = document.getElementById('user-projects').querySelector('.content-wrapper')
				while (content.firstChild) {
					content.removeChild(content.firstChild);
				}

				firebase.database().ref('users/creators/' + currentUser().uid + '/projects').once("value", function(snapshot){
					userProjects = snapshot.val()
					renderAllProjects(userProjects)
					popUp('Saved.')
					_('project-delete').classList.add('display-none')
					_('project-save').innerText = 'Add'
				})
			})
			
		}

	//- script.
	//- 	function activatePlaceSearch(){
	//- 		var input = _("location-search")
	//- 		 var options = {
	//- 			types: ['(cities)'],
	//- 		 };
	//- 		var autocomplete = new google.maps.places.Autocomplete(input)

	//- 		google.maps.event.addListener(autocomplete, 'place_changed', function() {
	//- 			var place = autocomplete.getPlace();
	//- 			for (var i = 0; i < place.address_components.length; i++) {
	//- 				for (var j = 0; j < place.address_components[i].types.length; j++) {
	//- 					if (place.address_components[i].types[j] == "postal_code") {
	//- 					document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;

	//- 					}
	//- 				}
	//- 			}
	//- 		})
	//- 	}

	//- script(type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB9uz6sZTjEZOIE6Z_GWoXNyxNpsT33v70&libraries=places&callback=activatePlaceSearch")


		



		